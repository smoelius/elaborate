// This file was automatically generated by `elaborate`.
// https://github.com/smoelius/elaborate

#[allow(unused_imports)]
use anyhow::Context;


#[cfg(feature = "wasi_ext")]
#[cfg(target_os = "wasi")]
pub trait TcpListenerExt: std :: os :: wasi :: net :: TcpListenerExt {
fn sock_accept ( & self , flags : u16 ) -> crate :: rewrite_output_type ! ( std :: io :: Result < u32 > ) {

    < Self as :: std :: os :: wasi :: net :: TcpListenerExt > :: sock_accept(self, flags)
        .map(Into::into)
        .with_context(|| crate::call_failed!(Some(self), "sock_accept", flags))
}
}

#[cfg(feature = "wasi_ext")]
#[cfg(target_os = "wasi")]
impl<T> TcpListenerExt for T where T: std :: os :: wasi :: net :: TcpListenerExt {}


