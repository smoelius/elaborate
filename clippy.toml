disallowed-methods = [
    { path = "std::env::current_dir", reason = "use `elaborate::std::env::current_dir`"},
    { path = "std::env::current_exe", reason = "use `elaborate::std::env::current_exe`"},
    { path = "std::env::home_dir", reason = "use `elaborate::std::env::home_dir`"},
    { path = "std::env::join_paths", reason = "use `elaborate::std::env::join_paths`"},
    { path = "std::env::set_current_dir", reason = "use `elaborate::std::env::set_current_dir`"},
    { path = "std::env::var", reason = "use `elaborate::std::env::var`"},
    { path = "std::env::var_os", reason = "use `elaborate::std::env::var_os`"},
    { path = "std::ffi::OsStr::to_str", reason = "use `elaborate::std::ffi::OsStr::to_str`"},
    { path = "std::ffi::OsString::try_reserve", reason = "use `elaborate::std::ffi::OsString::try_reserve`"},
    { path = "std::ffi::OsString::try_reserve_exact", reason = "use `elaborate::std::ffi::OsString::try_reserve_exact`"},
    { path = "std::fs::DirBuilder::create", reason = "use `elaborate::std::fs::DirBuilder::create`"},
    { path = "std::fs::DirEntry::file_type", reason = "use `elaborate::std::fs::DirEntry::file_type`"},
    { path = "std::fs::DirEntry::metadata", reason = "use `elaborate::std::fs::DirEntry::metadata`"},
    { path = "std::fs::File::create", reason = "use `elaborate::std::fs::File::create`"},
    { path = "std::fs::File::create_buffered", reason = "use `elaborate::std::fs::File::create_buffered`"},
    { path = "std::fs::File::create_new", reason = "use `elaborate::std::fs::File::create_new`"},
    { path = "std::fs::File::metadata", reason = "use `elaborate::std::fs::File::metadata`"},
    { path = "std::fs::File::open", reason = "use `elaborate::std::fs::File::open`"},
    { path = "std::fs::File::open_buffered", reason = "use `elaborate::std::fs::File::open_buffered`"},
    { path = "std::fs::File::set_len", reason = "use `elaborate::std::fs::File::set_len`"},
    { path = "std::fs::File::set_modified", reason = "use `elaborate::std::fs::File::set_modified`"},
    { path = "std::fs::File::set_permissions", reason = "use `elaborate::std::fs::File::set_permissions`"},
    { path = "std::fs::File::set_times", reason = "use `elaborate::std::fs::File::set_times`"},
    { path = "std::fs::File::sync_all", reason = "use `elaborate::std::fs::File::sync_all`"},
    { path = "std::fs::File::sync_data", reason = "use `elaborate::std::fs::File::sync_data`"},
    { path = "std::fs::File::try_clone", reason = "use `elaborate::std::fs::File::try_clone`"},
    { path = "std::fs::Metadata::accessed", reason = "use `elaborate::std::fs::Metadata::accessed`"},
    { path = "std::fs::Metadata::created", reason = "use `elaborate::std::fs::Metadata::created`"},
    { path = "std::fs::Metadata::modified", reason = "use `elaborate::std::fs::Metadata::modified`"},
    { path = "std::fs::OpenOptions::open", reason = "use `elaborate::std::fs::OpenOptions::open`"},
    { path = "std::fs::canonicalize", reason = "use `elaborate::std::fs::canonicalize`"},
    { path = "std::fs::copy", reason = "use `elaborate::std::fs::copy`"},
    { path = "std::fs::create_dir", reason = "use `elaborate::std::fs::create_dir`"},
    { path = "std::fs::create_dir_all", reason = "use `elaborate::std::fs::create_dir_all`"},
    { path = "std::fs::exists", reason = "use `elaborate::std::fs::exists`"},
    { path = "std::fs::hard_link", reason = "use `elaborate::std::fs::hard_link`"},
    { path = "std::fs::metadata", reason = "use `elaborate::std::fs::metadata`"},
    { path = "std::fs::read", reason = "use `elaborate::std::fs::read`"},
    { path = "std::fs::read_dir", reason = "use `elaborate::std::fs::read_dir`"},
    { path = "std::fs::read_link", reason = "use `elaborate::std::fs::read_link`"},
    { path = "std::fs::read_to_string", reason = "use `elaborate::std::fs::read_to_string`"},
    { path = "std::fs::remove_dir", reason = "use `elaborate::std::fs::remove_dir`"},
    { path = "std::fs::remove_dir_all", reason = "use `elaborate::std::fs::remove_dir_all`"},
    { path = "std::fs::remove_file", reason = "use `elaborate::std::fs::remove_file`"},
    { path = "std::fs::rename", reason = "use `elaborate::std::fs::rename`"},
    { path = "std::fs::set_permissions", reason = "use `elaborate::std::fs::set_permissions`"},
    { path = "std::fs::soft_link", reason = "use `elaborate::std::fs::soft_link`"},
    { path = "std::fs::symlink_metadata", reason = "use `elaborate::std::fs::symlink_metadata`"},
    { path = "std::fs::write", reason = "use `elaborate::std::fs::write`"},
    { path = "std::io::BufRead::fill_buf", reason = "use `elaborate::std::io::BufRead::fill_buf`"},
    { path = "std::io::BufRead::has_data_left", reason = "use `elaborate::std::io::BufRead::has_data_left`"},
    { path = "std::io::BufRead::read_line", reason = "use `elaborate::std::io::BufRead::read_line`"},
    { path = "std::io::BufRead::read_until", reason = "use `elaborate::std::io::BufRead::read_until`"},
    { path = "std::io::BufRead::skip_until", reason = "use `elaborate::std::io::BufRead::skip_until`"},
    { path = "std::io::Error::get_mut", reason = "use `elaborate::std::io::Error::get_mut`"},
    { path = "std::io::Error::get_ref", reason = "use `elaborate::std::io::Error::get_ref`"},
    { path = "std::io::Error::raw_os_error", reason = "use `elaborate::std::io::Error::raw_os_error`"},
    { path = "std::io::Read::read", reason = "use `elaborate::std::io::Read::read`"},
    { path = "std::io::Read::read_buf", reason = "use `elaborate::std::io::Read::read_buf`"},
    { path = "std::io::Read::read_buf_exact", reason = "use `elaborate::std::io::Read::read_buf_exact`"},
    { path = "std::io::Read::read_exact", reason = "use `elaborate::std::io::Read::read_exact`"},
    { path = "std::io::Read::read_to_end", reason = "use `elaborate::std::io::Read::read_to_end`"},
    { path = "std::io::Read::read_to_string", reason = "use `elaborate::std::io::Read::read_to_string`"},
    { path = "std::io::Read::read_vectored", reason = "use `elaborate::std::io::Read::read_vectored`"},
    { path = "std::io::Seek::rewind", reason = "use `elaborate::std::io::Seek::rewind`"},
    { path = "std::io::Seek::seek", reason = "use `elaborate::std::io::Seek::seek`"},
    { path = "std::io::Seek::seek_relative", reason = "use `elaborate::std::io::Seek::seek_relative`"},
    { path = "std::io::Seek::stream_len", reason = "use `elaborate::std::io::Seek::stream_len`"},
    { path = "std::io::Seek::stream_position", reason = "use `elaborate::std::io::Seek::stream_position`"},
    { path = "std::io::Stdin::read_line", reason = "use `elaborate::std::io::Stdin::read_line`"},
    { path = "std::io::Write::flush", reason = "use `elaborate::std::io::Write::flush`"},
    { path = "std::io::Write::write", reason = "use `elaborate::std::io::Write::write`"},
    { path = "std::io::Write::write_all", reason = "use `elaborate::std::io::Write::write_all`"},
    { path = "std::io::Write::write_all_vectored", reason = "use `elaborate::std::io::Write::write_all_vectored`"},
    { path = "std::io::Write::write_vectored", reason = "use `elaborate::std::io::Write::write_vectored`"},
    { path = "std::io::copy", reason = "use `elaborate::std::io::copy`"},
    { path = "std::io::read_to_string", reason = "use `elaborate::std::io::read_to_string`"},
    { path = "std::net::TcpListener::accept", reason = "use `elaborate::std::net::TcpListener::accept`"},
    { path = "std::net::TcpListener::bind", reason = "use `elaborate::std::net::TcpListener::bind`"},
    { path = "std::net::TcpListener::local_addr", reason = "use `elaborate::std::net::TcpListener::local_addr`"},
    { path = "std::net::TcpListener::only_v6", reason = "use `elaborate::std::net::TcpListener::only_v6`"},
    { path = "std::net::TcpListener::set_nonblocking", reason = "use `elaborate::std::net::TcpListener::set_nonblocking`"},
    { path = "std::net::TcpListener::set_only_v6", reason = "use `elaborate::std::net::TcpListener::set_only_v6`"},
    { path = "std::net::TcpListener::set_ttl", reason = "use `elaborate::std::net::TcpListener::set_ttl`"},
    { path = "std::net::TcpListener::take_error", reason = "use `elaborate::std::net::TcpListener::take_error`"},
    { path = "std::net::TcpListener::try_clone", reason = "use `elaborate::std::net::TcpListener::try_clone`"},
    { path = "std::net::TcpListener::ttl", reason = "use `elaborate::std::net::TcpListener::ttl`"},
    { path = "std::net::TcpStream::connect", reason = "use `elaborate::std::net::TcpStream::connect`"},
    { path = "std::net::TcpStream::connect_timeout", reason = "use `elaborate::std::net::TcpStream::connect_timeout`"},
    { path = "std::net::TcpStream::linger", reason = "use `elaborate::std::net::TcpStream::linger`"},
    { path = "std::net::TcpStream::local_addr", reason = "use `elaborate::std::net::TcpStream::local_addr`"},
    { path = "std::net::TcpStream::nodelay", reason = "use `elaborate::std::net::TcpStream::nodelay`"},
    { path = "std::net::TcpStream::peek", reason = "use `elaborate::std::net::TcpStream::peek`"},
    { path = "std::net::TcpStream::peer_addr", reason = "use `elaborate::std::net::TcpStream::peer_addr`"},
    { path = "std::net::TcpStream::read_timeout", reason = "use `elaborate::std::net::TcpStream::read_timeout`"},
    { path = "std::net::TcpStream::set_linger", reason = "use `elaborate::std::net::TcpStream::set_linger`"},
    { path = "std::net::TcpStream::set_nodelay", reason = "use `elaborate::std::net::TcpStream::set_nodelay`"},
    { path = "std::net::TcpStream::set_nonblocking", reason = "use `elaborate::std::net::TcpStream::set_nonblocking`"},
    { path = "std::net::TcpStream::set_read_timeout", reason = "use `elaborate::std::net::TcpStream::set_read_timeout`"},
    { path = "std::net::TcpStream::set_ttl", reason = "use `elaborate::std::net::TcpStream::set_ttl`"},
    { path = "std::net::TcpStream::set_write_timeout", reason = "use `elaborate::std::net::TcpStream::set_write_timeout`"},
    { path = "std::net::TcpStream::shutdown", reason = "use `elaborate::std::net::TcpStream::shutdown`"},
    { path = "std::net::TcpStream::take_error", reason = "use `elaborate::std::net::TcpStream::take_error`"},
    { path = "std::net::TcpStream::try_clone", reason = "use `elaborate::std::net::TcpStream::try_clone`"},
    { path = "std::net::TcpStream::ttl", reason = "use `elaborate::std::net::TcpStream::ttl`"},
    { path = "std::net::TcpStream::write_timeout", reason = "use `elaborate::std::net::TcpStream::write_timeout`"},
    { path = "std::net::ToSocketAddrs::to_socket_addrs", reason = "use `elaborate::std::net::ToSocketAddrs::to_socket_addrs`"},
    { path = "std::net::UdpSocket::bind", reason = "use `elaborate::std::net::UdpSocket::bind`"},
    { path = "std::net::UdpSocket::broadcast", reason = "use `elaborate::std::net::UdpSocket::broadcast`"},
    { path = "std::net::UdpSocket::connect", reason = "use `elaborate::std::net::UdpSocket::connect`"},
    { path = "std::net::UdpSocket::join_multicast_v4", reason = "use `elaborate::std::net::UdpSocket::join_multicast_v4`"},
    { path = "std::net::UdpSocket::join_multicast_v6", reason = "use `elaborate::std::net::UdpSocket::join_multicast_v6`"},
    { path = "std::net::UdpSocket::leave_multicast_v4", reason = "use `elaborate::std::net::UdpSocket::leave_multicast_v4`"},
    { path = "std::net::UdpSocket::leave_multicast_v6", reason = "use `elaborate::std::net::UdpSocket::leave_multicast_v6`"},
    { path = "std::net::UdpSocket::local_addr", reason = "use `elaborate::std::net::UdpSocket::local_addr`"},
    { path = "std::net::UdpSocket::multicast_loop_v4", reason = "use `elaborate::std::net::UdpSocket::multicast_loop_v4`"},
    { path = "std::net::UdpSocket::multicast_loop_v6", reason = "use `elaborate::std::net::UdpSocket::multicast_loop_v6`"},
    { path = "std::net::UdpSocket::multicast_ttl_v4", reason = "use `elaborate::std::net::UdpSocket::multicast_ttl_v4`"},
    { path = "std::net::UdpSocket::peek", reason = "use `elaborate::std::net::UdpSocket::peek`"},
    { path = "std::net::UdpSocket::peek_from", reason = "use `elaborate::std::net::UdpSocket::peek_from`"},
    { path = "std::net::UdpSocket::peer_addr", reason = "use `elaborate::std::net::UdpSocket::peer_addr`"},
    { path = "std::net::UdpSocket::read_timeout", reason = "use `elaborate::std::net::UdpSocket::read_timeout`"},
    { path = "std::net::UdpSocket::recv", reason = "use `elaborate::std::net::UdpSocket::recv`"},
    { path = "std::net::UdpSocket::recv_from", reason = "use `elaborate::std::net::UdpSocket::recv_from`"},
    { path = "std::net::UdpSocket::send", reason = "use `elaborate::std::net::UdpSocket::send`"},
    { path = "std::net::UdpSocket::send_to", reason = "use `elaborate::std::net::UdpSocket::send_to`"},
    { path = "std::net::UdpSocket::set_broadcast", reason = "use `elaborate::std::net::UdpSocket::set_broadcast`"},
    { path = "std::net::UdpSocket::set_multicast_loop_v4", reason = "use `elaborate::std::net::UdpSocket::set_multicast_loop_v4`"},
    { path = "std::net::UdpSocket::set_multicast_loop_v6", reason = "use `elaborate::std::net::UdpSocket::set_multicast_loop_v6`"},
    { path = "std::net::UdpSocket::set_multicast_ttl_v4", reason = "use `elaborate::std::net::UdpSocket::set_multicast_ttl_v4`"},
    { path = "std::net::UdpSocket::set_nonblocking", reason = "use `elaborate::std::net::UdpSocket::set_nonblocking`"},
    { path = "std::net::UdpSocket::set_read_timeout", reason = "use `elaborate::std::net::UdpSocket::set_read_timeout`"},
    { path = "std::net::UdpSocket::set_ttl", reason = "use `elaborate::std::net::UdpSocket::set_ttl`"},
    { path = "std::net::UdpSocket::set_write_timeout", reason = "use `elaborate::std::net::UdpSocket::set_write_timeout`"},
    { path = "std::net::UdpSocket::take_error", reason = "use `elaborate::std::net::UdpSocket::take_error`"},
    { path = "std::net::UdpSocket::try_clone", reason = "use `elaborate::std::net::UdpSocket::try_clone`"},
    { path = "std::net::UdpSocket::ttl", reason = "use `elaborate::std::net::UdpSocket::ttl`"},
    { path = "std::net::UdpSocket::write_timeout", reason = "use `elaborate::std::net::UdpSocket::write_timeout`"},
    { path = "std::os::fd::BorrowedFd<'_>::try_clone_to_owned", reason = "use `elaborate::std::os::fd::BorrowedFd<'_>::try_clone_to_owned`"},
    { path = "std::os::fd::OwnedFd::try_clone", reason = "use `elaborate::std::os::fd::OwnedFd::try_clone`"},
    { path = "std::os::linux::net::SocketAddrExt::as_abstract_name", reason = "use `elaborate::std::os::linux::net::SocketAddrExt::as_abstract_name`"},
    { path = "std::os::linux::net::SocketAddrExt::from_abstract_name", reason = "use `elaborate::std::os::linux::net::SocketAddrExt::from_abstract_name`"},
    { path = "std::os::linux::net::TcpStreamExt::deferaccept", reason = "use `elaborate::std::os::linux::net::TcpStreamExt::deferaccept`"},
    { path = "std::os::linux::net::TcpStreamExt::quickack", reason = "use `elaborate::std::os::linux::net::TcpStreamExt::quickack`"},
    { path = "std::os::linux::net::TcpStreamExt::set_deferaccept", reason = "use `elaborate::std::os::linux::net::TcpStreamExt::set_deferaccept`"},
    { path = "std::os::linux::net::TcpStreamExt::set_quickack", reason = "use `elaborate::std::os::linux::net::TcpStreamExt::set_quickack`"},
    { path = "std::os::linux::net::UnixSocketExt::passcred", reason = "use `elaborate::std::os::linux::net::UnixSocketExt::passcred`"},
    { path = "std::os::linux::net::UnixSocketExt::set_passcred", reason = "use `elaborate::std::os::linux::net::UnixSocketExt::set_passcred`"},
    { path = "std::os::linux::process::ChildExt::pidfd", reason = "use `elaborate::std::os::linux::process::ChildExt::pidfd`"},
    { path = "std::os::linux::process::PidFd::kill", reason = "use `elaborate::std::os::linux::process::PidFd::kill`"},
    { path = "std::os::linux::process::PidFd::try_wait", reason = "use `elaborate::std::os::linux::process::PidFd::try_wait`"},
    { path = "std::os::linux::process::PidFd::wait", reason = "use `elaborate::std::os::linux::process::PidFd::wait`"},
    { path = "std::os::unix::fs::FileExt::read_at", reason = "use `elaborate::std::os::unix::fs::FileExt::read_at`"},
    { path = "std::os::unix::fs::FileExt::read_exact_at", reason = "use `elaborate::std::os::unix::fs::FileExt::read_exact_at`"},
    { path = "std::os::unix::fs::FileExt::read_vectored_at", reason = "use `elaborate::std::os::unix::fs::FileExt::read_vectored_at`"},
    { path = "std::os::unix::fs::FileExt::write_all_at", reason = "use `elaborate::std::os::unix::fs::FileExt::write_all_at`"},
    { path = "std::os::unix::fs::FileExt::write_at", reason = "use `elaborate::std::os::unix::fs::FileExt::write_at`"},
    { path = "std::os::unix::fs::FileExt::write_vectored_at", reason = "use `elaborate::std::os::unix::fs::FileExt::write_vectored_at`"},
    { path = "std::os::unix::fs::chown", reason = "use `elaborate::std::os::unix::fs::chown`"},
    { path = "std::os::unix::fs::chroot", reason = "use `elaborate::std::os::unix::fs::chroot`"},
    { path = "std::os::unix::fs::fchown", reason = "use `elaborate::std::os::unix::fs::fchown`"},
    { path = "std::os::unix::fs::lchown", reason = "use `elaborate::std::os::unix::fs::lchown`"},
    { path = "std::os::unix::fs::symlink", reason = "use `elaborate::std::os::unix::fs::symlink`"},
    { path = "std::os::unix::net::SocketAddr::as_pathname", reason = "use `elaborate::std::os::unix::net::SocketAddr::as_pathname`"},
    { path = "std::os::unix::net::SocketAddr::from_pathname", reason = "use `elaborate::std::os::unix::net::SocketAddr::from_pathname`"},
    { path = "std::os::unix::net::UnixDatagram::bind", reason = "use `elaborate::std::os::unix::net::UnixDatagram::bind`"},
    { path = "std::os::unix::net::UnixDatagram::bind_addr", reason = "use `elaborate::std::os::unix::net::UnixDatagram::bind_addr`"},
    { path = "std::os::unix::net::UnixDatagram::connect", reason = "use `elaborate::std::os::unix::net::UnixDatagram::connect`"},
    { path = "std::os::unix::net::UnixDatagram::connect_addr", reason = "use `elaborate::std::os::unix::net::UnixDatagram::connect_addr`"},
    { path = "std::os::unix::net::UnixDatagram::local_addr", reason = "use `elaborate::std::os::unix::net::UnixDatagram::local_addr`"},
    { path = "std::os::unix::net::UnixDatagram::pair", reason = "use `elaborate::std::os::unix::net::UnixDatagram::pair`"},
    { path = "std::os::unix::net::UnixDatagram::peek", reason = "use `elaborate::std::os::unix::net::UnixDatagram::peek`"},
    { path = "std::os::unix::net::UnixDatagram::peek_from", reason = "use `elaborate::std::os::unix::net::UnixDatagram::peek_from`"},
    { path = "std::os::unix::net::UnixDatagram::peer_addr", reason = "use `elaborate::std::os::unix::net::UnixDatagram::peer_addr`"},
    { path = "std::os::unix::net::UnixDatagram::read_timeout", reason = "use `elaborate::std::os::unix::net::UnixDatagram::read_timeout`"},
    { path = "std::os::unix::net::UnixDatagram::recv", reason = "use `elaborate::std::os::unix::net::UnixDatagram::recv`"},
    { path = "std::os::unix::net::UnixDatagram::recv_from", reason = "use `elaborate::std::os::unix::net::UnixDatagram::recv_from`"},
    { path = "std::os::unix::net::UnixDatagram::recv_vectored_with_ancillary", reason = "use `elaborate::std::os::unix::net::UnixDatagram::recv_vectored_with_ancillary`"},
    { path = "std::os::unix::net::UnixDatagram::recv_vectored_with_ancillary_from", reason = "use `elaborate::std::os::unix::net::UnixDatagram::recv_vectored_with_ancillary_from`"},
    { path = "std::os::unix::net::UnixDatagram::send", reason = "use `elaborate::std::os::unix::net::UnixDatagram::send`"},
    { path = "std::os::unix::net::UnixDatagram::send_to", reason = "use `elaborate::std::os::unix::net::UnixDatagram::send_to`"},
    { path = "std::os::unix::net::UnixDatagram::send_to_addr", reason = "use `elaborate::std::os::unix::net::UnixDatagram::send_to_addr`"},
    { path = "std::os::unix::net::UnixDatagram::send_vectored_with_ancillary", reason = "use `elaborate::std::os::unix::net::UnixDatagram::send_vectored_with_ancillary`"},
    { path = "std::os::unix::net::UnixDatagram::send_vectored_with_ancillary_to", reason = "use `elaborate::std::os::unix::net::UnixDatagram::send_vectored_with_ancillary_to`"},
    { path = "std::os::unix::net::UnixDatagram::set_mark", reason = "use `elaborate::std::os::unix::net::UnixDatagram::set_mark`"},
    { path = "std::os::unix::net::UnixDatagram::set_nonblocking", reason = "use `elaborate::std::os::unix::net::UnixDatagram::set_nonblocking`"},
    { path = "std::os::unix::net::UnixDatagram::set_read_timeout", reason = "use `elaborate::std::os::unix::net::UnixDatagram::set_read_timeout`"},
    { path = "std::os::unix::net::UnixDatagram::set_write_timeout", reason = "use `elaborate::std::os::unix::net::UnixDatagram::set_write_timeout`"},
    { path = "std::os::unix::net::UnixDatagram::shutdown", reason = "use `elaborate::std::os::unix::net::UnixDatagram::shutdown`"},
    { path = "std::os::unix::net::UnixDatagram::take_error", reason = "use `elaborate::std::os::unix::net::UnixDatagram::take_error`"},
    { path = "std::os::unix::net::UnixDatagram::try_clone", reason = "use `elaborate::std::os::unix::net::UnixDatagram::try_clone`"},
    { path = "std::os::unix::net::UnixDatagram::unbound", reason = "use `elaborate::std::os::unix::net::UnixDatagram::unbound`"},
    { path = "std::os::unix::net::UnixDatagram::write_timeout", reason = "use `elaborate::std::os::unix::net::UnixDatagram::write_timeout`"},
    { path = "std::os::unix::net::UnixListener::accept", reason = "use `elaborate::std::os::unix::net::UnixListener::accept`"},
    { path = "std::os::unix::net::UnixListener::bind", reason = "use `elaborate::std::os::unix::net::UnixListener::bind`"},
    { path = "std::os::unix::net::UnixListener::bind_addr", reason = "use `elaborate::std::os::unix::net::UnixListener::bind_addr`"},
    { path = "std::os::unix::net::UnixListener::local_addr", reason = "use `elaborate::std::os::unix::net::UnixListener::local_addr`"},
    { path = "std::os::unix::net::UnixListener::set_nonblocking", reason = "use `elaborate::std::os::unix::net::UnixListener::set_nonblocking`"},
    { path = "std::os::unix::net::UnixListener::take_error", reason = "use `elaborate::std::os::unix::net::UnixListener::take_error`"},
    { path = "std::os::unix::net::UnixListener::try_clone", reason = "use `elaborate::std::os::unix::net::UnixListener::try_clone`"},
    { path = "std::os::unix::net::UnixStream::connect", reason = "use `elaborate::std::os::unix::net::UnixStream::connect`"},
    { path = "std::os::unix::net::UnixStream::connect_addr", reason = "use `elaborate::std::os::unix::net::UnixStream::connect_addr`"},
    { path = "std::os::unix::net::UnixStream::local_addr", reason = "use `elaborate::std::os::unix::net::UnixStream::local_addr`"},
    { path = "std::os::unix::net::UnixStream::pair", reason = "use `elaborate::std::os::unix::net::UnixStream::pair`"},
    { path = "std::os::unix::net::UnixStream::peek", reason = "use `elaborate::std::os::unix::net::UnixStream::peek`"},
    { path = "std::os::unix::net::UnixStream::peer_addr", reason = "use `elaborate::std::os::unix::net::UnixStream::peer_addr`"},
    { path = "std::os::unix::net::UnixStream::peer_cred", reason = "use `elaborate::std::os::unix::net::UnixStream::peer_cred`"},
    { path = "std::os::unix::net::UnixStream::read_timeout", reason = "use `elaborate::std::os::unix::net::UnixStream::read_timeout`"},
    { path = "std::os::unix::net::UnixStream::recv_vectored_with_ancillary", reason = "use `elaborate::std::os::unix::net::UnixStream::recv_vectored_with_ancillary`"},
    { path = "std::os::unix::net::UnixStream::send_vectored_with_ancillary", reason = "use `elaborate::std::os::unix::net::UnixStream::send_vectored_with_ancillary`"},
    { path = "std::os::unix::net::UnixStream::set_mark", reason = "use `elaborate::std::os::unix::net::UnixStream::set_mark`"},
    { path = "std::os::unix::net::UnixStream::set_nonblocking", reason = "use `elaborate::std::os::unix::net::UnixStream::set_nonblocking`"},
    { path = "std::os::unix::net::UnixStream::set_read_timeout", reason = "use `elaborate::std::os::unix::net::UnixStream::set_read_timeout`"},
    { path = "std::os::unix::net::UnixStream::set_write_timeout", reason = "use `elaborate::std::os::unix::net::UnixStream::set_write_timeout`"},
    { path = "std::os::unix::net::UnixStream::shutdown", reason = "use `elaborate::std::os::unix::net::UnixStream::shutdown`"},
    { path = "std::os::unix::net::UnixStream::take_error", reason = "use `elaborate::std::os::unix::net::UnixStream::take_error`"},
    { path = "std::os::unix::net::UnixStream::try_clone", reason = "use `elaborate::std::os::unix::net::UnixStream::try_clone`"},
    { path = "std::os::unix::net::UnixStream::write_timeout", reason = "use `elaborate::std::os::unix::net::UnixStream::write_timeout`"},
    { path = "std::os::wasi::fs::FileExt::advise", reason = "use `elaborate::std::os::wasi::fs::FileExt::advise`"},
    { path = "std::os::wasi::fs::FileExt::allocate", reason = "use `elaborate::std::os::wasi::fs::FileExt::allocate`"},
    { path = "std::os::wasi::fs::FileExt::create_directory", reason = "use `elaborate::std::os::wasi::fs::FileExt::create_directory`"},
    { path = "std::os::wasi::fs::FileExt::fdstat_set_flags", reason = "use `elaborate::std::os::wasi::fs::FileExt::fdstat_set_flags`"},
    { path = "std::os::wasi::fs::FileExt::fdstat_set_rights", reason = "use `elaborate::std::os::wasi::fs::FileExt::fdstat_set_rights`"},
    { path = "std::os::wasi::fs::FileExt::metadata_at", reason = "use `elaborate::std::os::wasi::fs::FileExt::metadata_at`"},
    { path = "std::os::wasi::fs::FileExt::read_at", reason = "use `elaborate::std::os::wasi::fs::FileExt::read_at`"},
    { path = "std::os::wasi::fs::FileExt::read_exact_at", reason = "use `elaborate::std::os::wasi::fs::FileExt::read_exact_at`"},
    { path = "std::os::wasi::fs::FileExt::read_link", reason = "use `elaborate::std::os::wasi::fs::FileExt::read_link`"},
    { path = "std::os::wasi::fs::FileExt::read_vectored_at", reason = "use `elaborate::std::os::wasi::fs::FileExt::read_vectored_at`"},
    { path = "std::os::wasi::fs::FileExt::remove_directory", reason = "use `elaborate::std::os::wasi::fs::FileExt::remove_directory`"},
    { path = "std::os::wasi::fs::FileExt::remove_file", reason = "use `elaborate::std::os::wasi::fs::FileExt::remove_file`"},
    { path = "std::os::wasi::fs::FileExt::tell", reason = "use `elaborate::std::os::wasi::fs::FileExt::tell`"},
    { path = "std::os::wasi::fs::FileExt::write_all_at", reason = "use `elaborate::std::os::wasi::fs::FileExt::write_all_at`"},
    { path = "std::os::wasi::fs::FileExt::write_at", reason = "use `elaborate::std::os::wasi::fs::FileExt::write_at`"},
    { path = "std::os::wasi::fs::FileExt::write_vectored_at", reason = "use `elaborate::std::os::wasi::fs::FileExt::write_vectored_at`"},
    { path = "std::os::wasi::fs::OpenOptionsExt::open_at", reason = "use `elaborate::std::os::wasi::fs::OpenOptionsExt::open_at`"},
    { path = "std::os::wasi::fs::link", reason = "use `elaborate::std::os::wasi::fs::link`"},
    { path = "std::os::wasi::fs::rename", reason = "use `elaborate::std::os::wasi::fs::rename`"},
    { path = "std::os::wasi::fs::symlink", reason = "use `elaborate::std::os::wasi::fs::symlink`"},
    { path = "std::os::wasi::fs::symlink_path", reason = "use `elaborate::std::os::wasi::fs::symlink_path`"},
    { path = "std::os::windows::fs::FileExt::seek_read", reason = "use `elaborate::std::os::windows::fs::FileExt::seek_read`"},
    { path = "std::os::windows::fs::FileExt::seek_write", reason = "use `elaborate::std::os::windows::fs::FileExt::seek_write`"},
    { path = "std::os::windows::fs::MetadataExt::change_time", reason = "use `elaborate::std::os::windows::fs::MetadataExt::change_time`"},
    { path = "std::os::windows::fs::MetadataExt::file_index", reason = "use `elaborate::std::os::windows::fs::MetadataExt::file_index`"},
    { path = "std::os::windows::fs::MetadataExt::number_of_links", reason = "use `elaborate::std::os::windows::fs::MetadataExt::number_of_links`"},
    { path = "std::os::windows::fs::MetadataExt::volume_serial_number", reason = "use `elaborate::std::os::windows::fs::MetadataExt::volume_serial_number`"},
    { path = "std::os::windows::fs::junction_point", reason = "use `elaborate::std::os::windows::fs::junction_point`"},
    { path = "std::os::windows::fs::symlink_dir", reason = "use `elaborate::std::os::windows::fs::symlink_dir`"},
    { path = "std::os::windows::fs::symlink_file", reason = "use `elaborate::std::os::windows::fs::symlink_file`"},
    { path = "std::os::windows::io::BorrowedHandle<'_>::try_clone_to_owned", reason = "use `elaborate::std::os::windows::io::BorrowedHandle<'_>::try_clone_to_owned`"},
    { path = "std::os::windows::io::BorrowedSocket<'_>::try_clone_to_owned", reason = "use `elaborate::std::os::windows::io::BorrowedSocket<'_>::try_clone_to_owned`"},
    { path = "std::os::windows::io::OwnedHandle::try_clone", reason = "use `elaborate::std::os::windows::io::OwnedHandle::try_clone`"},
    { path = "std::os::windows::io::OwnedSocket::try_clone", reason = "use `elaborate::std::os::windows::io::OwnedSocket::try_clone`"},
    { path = "std::panic::get_backtrace_style", reason = "use `elaborate::std::panic::get_backtrace_style`"},
    { path = "std::path::Path::canonicalize", reason = "use `elaborate::std::path::Path::canonicalize`"},
    { path = "std::path::Path::extension", reason = "use `elaborate::std::path::Path::extension`"},
    { path = "std::path::Path::file_name", reason = "use `elaborate::std::path::Path::file_name`"},
    { path = "std::path::Path::file_prefix", reason = "use `elaborate::std::path::Path::file_prefix`"},
    { path = "std::path::Path::file_stem", reason = "use `elaborate::std::path::Path::file_stem`"},
    { path = "std::path::Path::metadata", reason = "use `elaborate::std::path::Path::metadata`"},
    { path = "std::path::Path::parent", reason = "use `elaborate::std::path::Path::parent`"},
    { path = "std::path::Path::read_dir", reason = "use `elaborate::std::path::Path::read_dir`"},
    { path = "std::path::Path::read_link", reason = "use `elaborate::std::path::Path::read_link`"},
    { path = "std::path::Path::strip_prefix", reason = "use `elaborate::std::path::Path::strip_prefix`"},
    { path = "std::path::Path::symlink_metadata", reason = "use `elaborate::std::path::Path::symlink_metadata`"},
    { path = "std::path::Path::to_str", reason = "use `elaborate::std::path::Path::to_str`"},
    { path = "std::path::Path::try_exists", reason = "use `elaborate::std::path::Path::try_exists`"},
    { path = "std::path::PathBuf::try_reserve", reason = "use `elaborate::std::path::PathBuf::try_reserve`"},
    { path = "std::path::PathBuf::try_reserve_exact", reason = "use `elaborate::std::path::PathBuf::try_reserve_exact`"},
    { path = "std::path::absolute", reason = "use `elaborate::std::path::absolute`"},
    { path = "std::pipe::PipeReader::try_clone", reason = "use `elaborate::std::pipe::PipeReader::try_clone`"},
    { path = "std::pipe::PipeWriter::try_clone", reason = "use `elaborate::std::pipe::PipeWriter::try_clone`"},
    { path = "std::pipe::pipe", reason = "use `elaborate::std::pipe::pipe`"},
    { path = "std::process::Child::kill", reason = "use `elaborate::std::process::Child::kill`"},
    { path = "std::process::Child::try_wait", reason = "use `elaborate::std::process::Child::try_wait`"},
    { path = "std::process::Child::wait", reason = "use `elaborate::std::process::Child::wait`"},
    { path = "std::process::Child::wait_with_output", reason = "use `elaborate::std::process::Child::wait_with_output`"},
    { path = "std::process::Command::get_current_dir", reason = "use `elaborate::std::process::Command::get_current_dir`"},
    { path = "std::process::Command::output", reason = "use `elaborate::std::process::Command::output`"},
    { path = "std::process::Command::spawn", reason = "use `elaborate::std::process::Command::spawn`"},
    { path = "std::process::Command::status", reason = "use `elaborate::std::process::Command::status`"},
    { path = "std::process::ExitStatus::code", reason = "use `elaborate::std::process::ExitStatus::code`"},
    { path = "std::process::ExitStatus::exit_ok", reason = "use `elaborate::std::process::ExitStatus::exit_ok`"},
    { path = "std::process::ExitStatusError::code", reason = "use `elaborate::std::process::ExitStatusError::code`"},
    { path = "std::process::ExitStatusError::code_nonzero", reason = "use `elaborate::std::process::ExitStatusError::code_nonzero`"},
    { path = "std::thread::Builder::spawn", reason = "use `elaborate::std::thread::Builder::spawn`"},
    { path = "std::thread::Builder::spawn_scoped", reason = "use `elaborate::std::thread::Builder::spawn_scoped`"},
    { path = "std::thread::Builder::spawn_unchecked", reason = "use `elaborate::std::thread::Builder::spawn_unchecked`"},
    { path = "std::thread::Thread::name", reason = "use `elaborate::std::thread::Thread::name`"},
    { path = "std::thread::available_parallelism", reason = "use `elaborate::std::thread::available_parallelism`"},
    { path = "std::time::Instant::checked_add", reason = "use `elaborate::std::time::Instant::checked_add`"},
    { path = "std::time::Instant::checked_duration_since", reason = "use `elaborate::std::time::Instant::checked_duration_since`"},
    { path = "std::time::Instant::checked_sub", reason = "use `elaborate::std::time::Instant::checked_sub`"},
    { path = "std::time::SystemTime::checked_add", reason = "use `elaborate::std::time::SystemTime::checked_add`"},
    { path = "std::time::SystemTime::checked_sub", reason = "use `elaborate::std::time::SystemTime::checked_sub`"},
    { path = "std::time::SystemTime::duration_since", reason = "use `elaborate::std::time::SystemTime::duration_since`"},
    { path = "std::time::SystemTime::elapsed", reason = "use `elaborate::std::time::SystemTime::elapsed`"},
]
